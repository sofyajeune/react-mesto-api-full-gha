{"ast":null,"code":"var checkResponse=function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(res.status);};var BaseUrl='https://auth.nomoreparties.co';var signUp=function signUp(email,password){var requestUrl=BaseUrl+'/signup';return fetch(requestUrl,{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(checkResponse);};var signIn=function signIn(email,password){var requestUrl=BaseUrl+'/signin';return fetch(requestUrl,{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(checkResponse);};var checkToken=function checkToken(token){var requestUrl=BaseUrl+'/users/me';return fetch(requestUrl,{method:'GET',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(checkResponse);};export{signUp,signIn,checkToken};","map":{"version":3,"names":["checkResponse","res","ok","json","Promise","reject","status","BaseUrl","signUp","email","password","requestUrl","fetch","method","headers","body","JSON","stringify","then","signIn","checkToken","token"],"sources":["/Users/sofya/dev/react-mesto-auth/src/utils/apiAuth.js"],"sourcesContent":["const checkResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n}\n\nconst BaseUrl = 'https://auth.nomoreparties.co';\n\nconst signUp = (email, password) => {\n  const requestUrl = BaseUrl + '/signup';\n  return fetch(requestUrl, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n}\n\nconst signIn = (email, password) => {\n  const requestUrl = BaseUrl + '/signin';\n  return fetch(requestUrl, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n}\n\nconst checkToken = (token) => {\n  const requestUrl = BaseUrl + '/users/me';\n  return fetch(requestUrl, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n  }).then(checkResponse);\n}\n\nexport { signUp, signIn, checkToken };"],"mappings":"AAAA,GAAMA,cAAa,CAAG,QAAhBA,cAAa,CAAIC,GAAG,CAAK,CAC7B,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAOD,IAAG,CAACE,IAAI,EAAE,CACnB,CACA,MAAOC,QAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC,CACnC,CAAC,CAED,GAAMC,QAAO,CAAG,+BAA+B,CAE/C,GAAMC,OAAM,CAAG,QAATA,OAAM,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CAClC,GAAMC,WAAU,CAAGJ,OAAO,CAAG,SAAS,CACtC,MAAOK,MAAK,CAACD,UAAU,CAAE,CACvBE,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAC,CAC1C,CAAC,CAAC,CAACQ,IAAI,CAAClB,aAAa,CAAC,CACxB,CAAC,CAED,GAAMmB,OAAM,CAAG,QAATA,OAAM,CAAIV,KAAK,CAAEC,QAAQ,CAAK,CAClC,GAAMC,WAAU,CAAGJ,OAAO,CAAG,SAAS,CACtC,MAAOK,MAAK,CAACD,UAAU,CAAE,CACvBE,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC9B,cAAc,CAAE,kBAClB,CAAC,CACCC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAC,CAC1C,CAAC,CAAC,CAACQ,IAAI,CAAClB,aAAa,CAAC,CACxB,CAAC,CAED,GAAMoB,WAAU,CAAG,QAAbA,WAAU,CAAIC,KAAK,CAAK,CAC5B,GAAMV,WAAU,CAAGJ,OAAO,CAAG,WAAW,CACxC,MAAOK,MAAK,CAACD,UAAU,CAAE,CACvBE,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,kBAAYO,KAAK,CAClC,CACF,CAAC,CAAC,CAACH,IAAI,CAAClB,aAAa,CAAC,CACxB,CAAC,CAED,OAASQ,MAAM,CAAEW,MAAM,CAAEC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}